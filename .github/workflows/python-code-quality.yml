---
name: Python Code Quality

on:
  push:
    branches:
      - main
      - releasebranch_*
  pull_request:

jobs:
  python-checks:
    name: Python Code Quality Checks

    concurrency:
      group: ${{ github.workflow }}-${{ github.job }}-${{
        github.event_name == 'pull_request' &&
        github.head_ref || github.sha }}
      cancel-in-progress: true

    strategy:
      matrix:
        include:
          - os: ubuntu-22.04

    env:
      # renovate: datasource=python-version depName=python
      PYTHON_VERSION: "3.10"
      MIN_PYTHON_VERSION: "3.8"
      # renovate: datasource=pypi depName=black
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> ed0e218660 (CI(python): Keep tools versions updated with env vars and renovate (#3799))
=======
>>>>>>> 67060aebb0 (CI(deps): Update dependency black to v24.4.2 (#3809))
      BLACK_VERSION: "24.10.0"
      # renovate: datasource=pypi depName=flake8
      FLAKE8_VERSION: "7.1.1"
      # renovate: datasource=pypi depName=pylint
      PYLINT_VERSION: "2.12.2"
      # renovate: datasource=pypi depName=bandit
      BANDIT_VERSION: "1.7.10"
      # renovate: datasource=pypi depName=ruff
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      RUFF_VERSION: "0.5.1"
=======
      RUFF_VERSION: "0.5.4"
>>>>>>> main
=======
      RUFF_VERSION: "0.5.5"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.5.7"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.6.2"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.6.3"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.6.9"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.7.0"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.7.1"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.7.2"
>>>>>>> 0824e8842e (CI(deps): Update ruff to v0.7.2 (#4631))
=======
      RUFF_VERSION: "0.7.3"
<<<<<<< HEAD
>>>>>>> osgeo-main
=======
=======
      BLACK_VERSION: "24.4.0"
=======
      BLACK_VERSION: "24.4.2"
>>>>>>> c7298a361f (CI(deps): Update dependency black to v24.4.2 (#3809))
      # renovate: datasource=pypi depName=flake8
      FLAKE8_VERSION: "5.0.4"
      # renovate: datasource=pypi depName=pylint
      PYLINT_VERSION: "2.12.2"
      # renovate: datasource=pypi depName=bandit
<<<<<<< HEAD
      BANDIT_VERSION: "1.7.8"
>>>>>>> 037bf1e53a (CI(python): Keep tools versions updated with env vars and renovate (#3799))
<<<<<<< HEAD
>>>>>>> fbd7bb8b11 (CI(python): Keep tools versions updated with env vars and renovate (#3799))
=======
=======
      BANDIT_VERSION: "1.7.9"
<<<<<<< HEAD
>>>>>>> 624d1f632d (CI(deps): Update dependency bandit to v1.7.9 (#3808))
<<<<<<< HEAD
>>>>>>> 11d06352a1 (CI(deps): Update dependency bandit to v1.7.9 (#3808))
=======
=======
      # renovate: datasource=pypi depName=ruff
<<<<<<< HEAD
<<<<<<< HEAD
      RUFF_VERSION: "0.5.0"
>>>>>>> deff63f816 (checks(ruff): Configure ruff linter (#3972))
<<<<<<< HEAD
>>>>>>> bb75228712 (checks(ruff): Configure ruff linter (#3972))
=======
=======
      RUFF_VERSION: "0.5.1"
>>>>>>> 6ece005836 (CI(deps): Update dependency ruff to v0.5.1 (#3983))
<<<<<<< HEAD
>>>>>>> f74592713f (CI(deps): Update dependency ruff to v0.5.1 (#3983))
=======
=======
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      RUFF_VERSION: "0.5.1"
=======
      RUFF_VERSION: "0.5.4"
>>>>>>> main
=======
      RUFF_VERSION: "0.5.5"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.5.7"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.6.2"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.6.3"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.6.9"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.7.0"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.7.1"
>>>>>>> osgeo-main
=======
      RUFF_VERSION: "0.7.2"
>>>>>>> 0824e8842e (CI(deps): Update ruff to v0.7.2 (#4631))
>>>>>>> 79c03e82ac (CI(deps): Update ruff to v0.7.2 (#4631))
>>>>>>> 2d8985db52 (CI(deps): Update ruff to v0.7.2 (#4631))
=======
      RUFF_VERSION: "0.7.4"
>>>>>>> d5584063f5 (CI(deps): Update ruff to v0.7.4 (#4705))
=======
      RUFF_VERSION: "0.8.0"
>>>>>>> f1093bdc6a (CI(deps): Update ruff to v0.8.0 (#4738))
=======
      RUFF_VERSION: "0.8.0"
=======
      RUFF_VERSION: "0.7.3"
=======
      BLACK_VERSION: "24.4.0"
=======
      BLACK_VERSION: "24.4.2"
>>>>>>> c7298a361f (CI(deps): Update dependency black to v24.4.2 (#3809))
      # renovate: datasource=pypi depName=flake8
      FLAKE8_VERSION: "5.0.4"
      # renovate: datasource=pypi depName=pylint
      PYLINT_VERSION: "2.12.2"
      # renovate: datasource=pypi depName=bandit
<<<<<<< HEAD
      BANDIT_VERSION: "1.7.8"
>>>>>>> 037bf1e53a (CI(python): Keep tools versions updated with env vars and renovate (#3799))
<<<<<<< HEAD
>>>>>>> fbd7bb8b11 (CI(python): Keep tools versions updated with env vars and renovate (#3799))
<<<<<<< HEAD
>>>>>>> ed0e218660 (CI(python): Keep tools versions updated with env vars and renovate (#3799))
=======
=======
=======
      BANDIT_VERSION: "1.7.9"
>>>>>>> 624d1f632d (CI(deps): Update dependency bandit to v1.7.9 (#3808))
>>>>>>> 11d06352a1 (CI(deps): Update dependency bandit to v1.7.9 (#3808))
>>>>>>> 9083721e54 (Fixes -Wclass-memaccess and -Wdeprecated-declaration warnings0)

    runs-on: ${{ matrix.os }}
    permissions:
      security-events: write

    steps:
      - name: Versions
        run: |
          echo OS: ${{ matrix.os }}
          echo Python: ${{ env.PYTHON_VERSION }}
          echo Minimal Python version: ${{ env.MIN_PYTHON_VERSION }}
          echo Black: ${{ env.BLACK_VERSION }}
          echo Flake8: ${{ env.FLAKE8_VERSION }}
          echo Pylint: ${{ env.PYLINT_VERSION }}
          echo Bandit: ${{ env.BANDIT_VERSION }}
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          echo Ruff: ${{ env.RUFF_VERSION }}
=======
>>>>>>> 037bf1e53a (CI(python): Keep tools versions updated with env vars and renovate (#3799))
=======
          echo Ruff: ${{ env.RUFF_VERSION }}
>>>>>>> deff63f816 (checks(ruff): Configure ruff linter (#3972))
=======
          echo Ruff: ${{ env.RUFF_VERSION }}
=======
>>>>>>> 037bf1e53a (CI(python): Keep tools versions updated with env vars and renovate (#3799))
>>>>>>> ed0e218660 (CI(python): Keep tools versions updated with env vars and renovate (#3799))

<<<<<<< HEAD
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
=======
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
>>>>>>> d4a11a7eae (CI(deps): Update actions/checkout action to v4.1.7 (#3801))

      - name: Set up Python
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: pip
      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install Ruff
        run: pip install ruff==${{ env.RUFF_VERSION }}
<<<<<<< HEAD
      - name: Run Ruff (output annotations on fixable errors)
        run: ruff check --output-format=github . --preview --unsafe-fixes
        continue-on-error: true
      - name: Run Ruff (apply fixes for suggestions)
        run: ruff check . --preview --fix --unsafe-fixes
      - name: Create and uploads code suggestions to apply for Ruff
        # Will fail fast here if there are changes required
        id: diff-ruff
        # To run after ruff step exits with failure when rules don't have fixes available
        if: ${{ !cancelled() }}
=======
      - name: Run Ruff
        run: ruff check --output-format=github . --preview --fix --unsafe-fixes
      - name: Create and uploads code suggestions to apply for Ruff
        # Will fail fast here if there are changes required
        id: diff-ruff
<<<<<<< HEAD
>>>>>>> deff63f816 (checks(ruff): Configure ruff linter (#3972))
=======
        # To run after ruff step exits with failure when rules don't have fixes available
        if: ${{ !cancelled() }}
>>>>>>> 57856bcbb9 (CI(ruff): Fine tune posting Ruff suggestions (#3978))
        uses: ./.github/actions/create-upload-suggestions
        with:
          tool-name: ruff
          # To keep repo's file structure in formatted changes artifact
          extra-upload-changes: pyproject.toml

      - name: Install Black only
        run: pip install black[jupyter]==${{ env.BLACK_VERSION }}

      - name: Run Black
        run: black .

      - name: Create and uploads code suggestions to apply for Black
        # Will fail fast here if there are changes required
        id: diff-black
        uses: ./.github/actions/create-upload-suggestions
        with:
          tool-name: black
          # To keep repo's file structure in formatted changes artifact
          extra-upload-changes: .clang-format

      - name: Install non-Python dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y wget git gawk findutils
          xargs -a <(awk '! /^ *(#|$)/' ".github/workflows/apt.txt") -r -- \
          sudo apt-get install -y --no-install-recommends --no-install-suggests

      - name: Install Python dependencies
        run: |
          pip install -r .github/workflows/python_requirements.txt
          pip install -r .github/workflows/optional_requirements.txt
<<<<<<< HEAD
          pip install --user pipx
          pipx ensurepath
          pipx install flake8==${{ env.FLAKE8_VERSION }}
          pipx install pylint==${{ env.PYLINT_VERSION }}
          pipx inject pylint -r .github/workflows/python_requirements.txt -r .github/workflows/optional_requirements.txt
          # The extra toml is only needed before Python 3.11
          pipx install bandit[sarif,toml]==${{ env.BANDIT_VERSION }}
=======
          pip install flake8==${{ env.FLAKE8_VERSION }}
          pip install pylint==${{ env.PYLINT_VERSION }} pytest-github-actions-annotate-failures
          pip install bandit[sarif]==${{ env.BANDIT_VERSION }}
>>>>>>> 037bf1e53a (CI(python): Keep tools versions updated with env vars and renovate (#3799))

      - name: Run Flake8
        run: |
          flake8 --count --statistics --show-source --jobs=$(nproc) .

      - name: Run Flake8 on additional files
        run: |
          flake8 --count --statistics --show-source --jobs=$(nproc) python/grass/{script,jupyter}/testsuite/

      - name: Bandit Vulnerability Scan
        run: |
          bandit -c pyproject.toml -iii -r . -f sarif -o bandit.sarif --exit-zero

      - name: Upload Bandit Scan Results
<<<<<<< HEAD
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
=======
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
>>>>>>> 0d3a14215f (CI(deps): Update actions/upload-artifact action to v4.3.4 (#3985))
        with:
          name: bandit.sarif
          path: bandit.sarif

      - name: Upload SARIF File into Security Tab
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        uses: github/codeql-action/upload-sarif@ea9e4e37992a54ee68a9622e985e60c8e8f12d9f # v3.27.4
=======
        uses: github/codeql-action/upload-sarif@2e230e8fe0ad3a14a340ad0815ddb96d599d2aff # v3.25.8
>>>>>>> 7c5b548392 (CI(deps): Update github/codeql-action action to v3.25.8 (#3769))
=======
        uses: github/codeql-action/upload-sarif@23acc5c183826b7a8a97bce3cecc52db901f8251 # v3.25.10
>>>>>>> 9538b35e65 (CI(deps): Update github/codeql-action action to v3.25.10 (#3800))
=======
        uses: github/codeql-action/upload-sarif@b611370bb5703a7efb587f9d136a52ea24c5c38c # v3.25.11
>>>>>>> 1a779126bc (CI(deps): Update github/codeql-action action to v3.25.11 (#3938))
=======
        uses: github/codeql-action/upload-sarif@f09c1c0a94de965c15400f5634aa42fac8fb8f88 # v3.27.5
>>>>>>> c877e71d20 (CI(deps): Update github/codeql-action action to v3.27.5 (#4727))
=======
=======
>>>>>>> 036f3ba175 (CI(deps): Update github/codeql-action action to v3.25.10 (#3800))
        uses: github/codeql-action/upload-sarif@f09c1c0a94de965c15400f5634aa42fac8fb8f88 # v3.27.5
=======
=======
>>>>>>> 55dd37bbed (CI(deps): Update github/codeql-action action to v3.25.10 (#3800))
<<<<<<< HEAD
        uses: github/codeql-action/upload-sarif@ea9e4e37992a54ee68a9622e985e60c8e8f12d9f # v3.27.4
=======
        uses: github/codeql-action/upload-sarif@2e230e8fe0ad3a14a340ad0815ddb96d599d2aff # v3.25.8
>>>>>>> 7c5b548392 (CI(deps): Update github/codeql-action action to v3.25.8 (#3769))
<<<<<<< HEAD
>>>>>>> ac7a10c8e1 (CI(deps): Update github/codeql-action action to v3.25.8 (#3769))
<<<<<<< HEAD
>>>>>>> a1e27695bc (CI(deps): Update github/codeql-action action to v3.25.8 (#3769))
=======
=======
=======
        uses: github/codeql-action/upload-sarif@23acc5c183826b7a8a97bce3cecc52db901f8251 # v3.25.10
>>>>>>> 9538b35e65 (CI(deps): Update github/codeql-action action to v3.25.10 (#3800))
>>>>>>> 55dd37bbed (CI(deps): Update github/codeql-action action to v3.25.10 (#3800))
>>>>>>> 036f3ba175 (CI(deps): Update github/codeql-action action to v3.25.10 (#3800))
        with:
          sarif_file: bandit.sarif

      - name: Create installation directory
        run: |
          mkdir $HOME/install

      - name: Set number of cores for compilation
        run: |
          echo "MAKEFLAGS=-j$(nproc)" >> $GITHUB_ENV

<<<<<<< HEAD
<<<<<<< HEAD
      - uses: rui314/setup-mold@b015f7e3f2938ad3a5ed6e5111a8c6c7c1d6db6e # v1
=======
      - uses: rui314/setup-mold@65685f45207903d37d006cd402c397653c57660e # v1
>>>>>>> e253d18cba (CI(deps): Update rui314/setup-mold digest to 65685f4 (#3858))
=======
      - uses: rui314/setup-mold@2e332a0b602c2fc65d2d3995941b1b29a5f554a0 # v1
>>>>>>> 7c0ad8584e (CI(deps): Update rui314/setup-mold digest to 2e332a0 (#3989))
      - name: Build
        run: .github/workflows/build_${{ matrix.os }}.sh $HOME/install

      - name: Add the bin directory to PATH
        run: |
          echo "$HOME/install/bin" >> $GITHUB_PATH

      - name: Run Pylint on grass package
        run: |
          export PYTHONPATH=`grass --config python_path`:$PYTHONPATH
          export LD_LIBRARY_PATH=$(grass --config path)/lib:$LD_LIBRARY_PATH
          cd python
          pylint --persistent=no --py-version=${{ env.MIN_PYTHON_VERSION }} --jobs=$(nproc) grass

      - name: Run Pylint on wxGUI
        run: |
          export PYTHONPATH=`grass --config python_path`:$PYTHONPATH
          export LD_LIBRARY_PATH=$(grass --config path)/lib:$LD_LIBRARY_PATH
          cd gui/wxpython
          pylint --persistent=no --py-version=${{ env.MIN_PYTHON_VERSION }} --jobs=$(nproc) *

      - name: Run Pylint on other files using pytest
        run: |
<<<<<<< HEAD
          pipx inject --include-apps pylint pytest==7.4.4
          pipx inject pylint pytest-pylint==0.19 pytest-github-actions-annotate-failures
=======
          pip install pytest==7.4.4 pytest-pylint==0.19
>>>>>>> 037bf1e53a (CI(python): Keep tools versions updated with env vars and renovate (#3799))
          echo "::warning file=.github/workflows/python-code-quality.yml,line=149,col=42,endColumn=48::\
            Temporarily downgraded pytest-pylint and pytest to allow merging other PRs.\
            The errors reported with a newer version seem legitimite and should be fixed \
            (2023-10-18, see https://github.com/OSGeo/grass/pull/3205)\
            (2024-01-28, see https://github.com/OSGeo/grass/issues/3380)"
          export PYTHONPATH=`grass --config python_path`:$PYTHONPATH
          export LD_LIBRARY_PATH=$(grass --config path)/lib:$LD_LIBRARY_PATH
          pytest --pylint -m pylint --pylint-rcfile=.pylintrc --pylint-jobs=$(nproc) \
            --pylint-ignore-patterns="${{ env.PylintIgnore }}"
        env:
          PylintIgnore: "python/.*,gui/wxpython/.*,doc/.*,man/.*,utils/.*,locale/.*,raster/.*,\
            imagery/.*,scripts/r.in.wms/wms_drv.py,scripts/g.extension/g.extension.py,\
            temporal/t.rast.accdetect/t.rast.accdetect.py,temporal/t.rast.accumulate/t.rast.accumulate.py,\
            scripts/d.rast.edit/d.rast.edit.py"

      - name: Test compiling example modules
        run: |
          ( cd doc/raster/r.example/ && make )
          ( cd doc/vector/v.example/ && make )

      - name: Run Sphinx to check API documentation build
        run: |
          pip install sphinx
          make sphinxdoclib
          ARCH=$(cat include/Make/Platform.make | grep ^ARCH | cut -d'=' -f2 | xargs)
          cp -rp dist.$ARCH/docs/html/libpython sphinx-grass

      - name: Make Sphinx documentation available
<<<<<<< HEAD
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
=======
        uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
>>>>>>> 0d3a14215f (CI(deps): Update actions/upload-artifact action to v4.3.4 (#3985))
        with:
          name: sphinx-grass
          path: sphinx-grass
          retention-days: 3

  python-success:
    name: Python Code Quality Result
    needs:
      - python-checks
    if: ${{ always() }}
    uses: ./.github/workflows/verify-success.yml
    with:
      needs_context: ${{ toJson(needs) }}
